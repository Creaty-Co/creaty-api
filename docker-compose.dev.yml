version: '3.9'

services:
  db:
    image: postgres:14.6
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 54322:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
      - POSTGRES_HOST=127.0.0.1
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - db_network
    restart: unless-stopped
  redis:
    image: redis:6.2.6
    networks:
      - redis_network
    restart: unless-stopped
  api:
    build:
      context: .
    command: gunicorn api.wsgi -c gunicorn_conf.py
    env_file:
      - .env
    volumes:
      - static_volume:/api/static
      - profile_volume:/api/profile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - db_network
      - redis_network
      - nginx_network
    restart: unless-stopped
  web:
    build:
      context: ./web
    volumes:
      - web_volume:/usr/src/app/build
  nginx:
    image: nginx:1.21.6
    depends_on:
      - api
      - web
    env_file:
      - .env
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/api/static
      - web_volume:/usr/share/nginx/html
      - ./nginx.conf.conf:/etc/nginx/templates/nginx.conf.conf:ro
      - ./certs:/api/certs
    networks:
      - nginx_network
    restart: unless-stopped
  celery:
    build:
      context: .
    command: celery -A api worker -c 3 -P gevent -l info
    env_file:
      - .env
    depends_on:
      - nginx
    networks:
      - db_network
      - redis_network
    restart: unless-stopped
  celery_beat:
    build:
      context: .
    command: celery -A api beat -S django -l info
    env_file:
      - .env
    depends_on:
      - celery
    networks:
      - db_network
      - redis_network
    restart: unless-stopped

volumes:
  pg_data:
  static_volume:
  web_volume:
  profile_volume:

networks:
  db_network:
  redis_network:
  nginx_network:
