name: "Call: CI"

on:
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.3
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.10.8
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.3
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Login to container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Repository to lower case
        # language="shell script"
        run: |
          repository=${{ github.repository }}
          echo "REPOSITORY=${repository,,}" >> ${GITHUB_ENV}

      - name: Download buildkit state
        id: cache-buildkit
        uses: actions/cache@v3
        with:
          path: ./state
          key: buildkit-state
      - name: Load buildkit state into volume
        run: |
          container_id=$(docker run -d -v buildx_buildkit_${{ steps.setup_buildx.outputs.name }}0_state:/state ubuntu tail -f /dev/null)
          docker exec -t ${container_id} ls -al /state
          mkdir ./state || docker exec -t ${container_id} sh -c 'rm -rf /state/*'
          ls -al ./state
          docker cp ./state/. ${container_id}:/state
          docker exec -t ${container_id} chown -R root:root /state
          docker exec -t ${container_id} ls -al /state
          docker rm -f ${container_id}

      #      - name: Build test image
      #        uses: docker/build-push-action@v5.1.0
      #        with:
      #          context: .
      #          load: true
      #          tags: creaty-api-test
      - name: Build test image
        run: docker buildx build --load -t creaty-api-test .

      - name: Copy files from Docker to host
        run: |
          rm -rf ./state/*
          docker rm -f buildx_buildkit_${{ steps.setup_buildx.outputs.name }}0
          container_id=$(docker run -d -v buildx_buildkit_${{ steps.setup_buildx.outputs.name }}0_state:/state ubuntu tail -f /dev/null)
          docker exec -t ${container_id} chmod -R 777 /state
          docker exec -t ${container_id} ls -al /state
          docker exec -t ${container_id} du -h --max-depth=1 /state/runc-overlayfs/snapshots/snapshots/
          docker exec -t ${container_id} du -h --max-depth=1 /state
          docker cp ${container_id}:/state/. ./state
          ls -al ./state
          docker rm -f ${container_id}
      - name: Upload buildkit state
        uses: actions/cache@v3
        with:
          path: ./state
          key: buildkit-state

      - name: Run tests
        # language="shell script"
        run: |
          docker-compose -f docker/test/docker-compose.yml up --build \
          --exit-code-from api --abort-on-container-exit api
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.3.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverages/coverage.xml
