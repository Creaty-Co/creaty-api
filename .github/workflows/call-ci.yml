name: "Call: CI"

on:
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.3
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.10.8
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.3
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Login to container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Repository to lower case
        # language="shell script"
        run: |
          repository=${{ github.repository }}
          echo "REPOSITORY=${repository,,}" >> ${GITHUB_ENV}

      - name: Download buildkit state
        id: cache-buildkit
        uses: actions/cache@v3
        with:
          path: ./state
          key: buildkit-state
      - name: Load buildkit state into volume
        run: |
          mkdir ./state || true
          container_id=$(docker run -d -v buildx_buildkit_${{ steps.setup_buildx.outputs.name }}0_state:/state alpine tail -f /dev/null)
          docker cp ./state/. ${container_id}:/state
          ls -al ./state
          docker exec -t ${container_id} ls -al /state
          docker rm -f ${container_id}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          load: true
          tags: creaty-api-test
          cache-from: type=registry,ref=ghcr.io/${{ env.REPOSITORY }}/api:cache-latest,mode=max
          cache-to: type=registry,mode=max,ref=ghcr.io/${{ env.REPOSITORY }}/api:cache-latest,mode=max

      - name: Copy files from Docker to host
        run: |
          pwd
          rm -rf ./state
          container_id=$(docker run -d -v buildx_buildkit_${{ steps.setup_buildx.outputs.name }}0_state:/state alpine tail -f /dev/null)
          docker exec -t ${container_id} ls -al /state
          docker cp ${container_id}:/state ./state
          docker rm -f ${container_id}
          ls -al ./state
      - name: Upload buildkit state
        uses: actions/cache@v3
        with:
          path: ./state
          key: buildkit-state

      - name: Run tests
        # language="shell script"
        run: |
          docker-compose -f docker/test/docker-compose.yml up --build \
          --exit-code-from api --abort-on-container-exit api
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.3.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverages/coverage.xml
