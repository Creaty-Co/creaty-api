version: '3.9'

services:
  db:
    container_name: stage-db
    extends:
      file: ../docker-compose.base.yml
      service: db
    build:
      context: ../../db
    env_file: [ ../../envs/.stage.env ]
    ports: [ 5433:5432 ]
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ../../db/postgresql.conf:/var/lib/postgresql/data/postgresql.conf

  redis:
    container_name: stage-redis
    extends:
      file: ../docker-compose.base.yml
      service: redis

  api:
    container_name: stage-api
    extends:
      file: ../docker-compose.base.yml
      service: api
    image: ${API_IMAGE}:${TAG}
    env_file: [ ../../envs/.stage.env ]
    volumes:
      - static_volume:/api/static
    networks: [ api_network ]
    depends_on: [ db, redis ]

  celery:
    container_name: stage-celery
    extends:
      file: ../docker-compose.base.yml
      service: celery
    image: ${API_IMAGE}:${TAG}
    env_file: [ ../../envs/.stage.env ]
    depends_on: [ api ]

  cbeat:
    container_name: stage-cbeat
    extends:
      file: ../docker-compose.base.yml
      service: cbeat
    image: ${API_IMAGE}:${TAG}
    env_file: [ ../../envs/.stage.env ]
    depends_on: [ celery ]

  nginx:
    container_name: stage-nginx
    extends:
      file: ../docker-compose.base.yml
      service: nginx
    build:
      dockerfile: ../nginx/stage.dockerfile
      args: [ TAG ]
    env_file: [ ../../envs/.stage.env ]
    ports: [ 443:443 ]
    volumes:
      - static_volume:/etc/nginx/html/api/static
    networks: [ proxy_network ]
    depends_on: [ api ]

volumes:
  db_volume:
  profiles_volume:
  static_volume:

networks:
  db_network:
  redis_network:
  api_network:
  proxy_network:
