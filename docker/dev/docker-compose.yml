version: '3.9'

services:
  db:
    extends:
      file: ../docker-compose.base.yml
      service: db
    container_name: dev-db
    build:
      context: ../../db
    env_file: [ ../../envs/.dev.env ]
    ports: [ 5434:5432 ]
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ../../db/postgresql.conf:/var/lib/postgresql/data/postgresql.conf

  redis:
    extends:
      file: ../docker-compose.base.yml
      service: redis
    container_name: dev-redis

  api:
    extends:
      file: ../docker-compose.base.yml
      service: api
    container_name: dev-api
    image: ${API_IMAGE}
    env_file: [ ../../envs/.dev.env ]
    volumes:
      - api_static_volume:/api/static
    command: bash -c "
      python manage.py migrate
      && python manage.py collectstatic --noinput
      && (daphne -b 0.0.0.0 -p 8001 api.asgi:application &)
      && gunicorn api.wsgi -c gunicorn/config.py
      "
    networks: [ nginx_network ]
    depends_on: [ db, redis ]

  celery:
    extends:
      file: ../docker-compose.base.yml
      service: celery
    container_name: dev-celery
    image: ${API_IMAGE}
    env_file: [ ../../envs/.dev.env ]
    depends_on: [ api ]

  celery_beat:
    extends:
      file: ../docker-compose.base.yml
      service: celery_beat
    container_name: dev-celery_beat
    image: ${API_IMAGE}
    env_file: [ ../../envs/.dev.env ]
    depends_on: [ celery ]

  nginx:
    extends:
      file: ../docker-compose.base.yml
      service: nginx
    container_name: dev-nginx
    build:
      dockerfile: ../nginx/dev.dockerfile
    env_file: [ ../../envs/.dev.env ]
    volumes:
      - api_static_volume:/etc/nginx/html/api/static
    networks: [ proxy_network ]
    depends_on: [ api ]

volumes:
  db_volume:
  api_static_volume:

networks:
  db_network:
  redis_network:
  nginx_network:
  proxy_network:
    name: stage_proxy_network
    external: true
