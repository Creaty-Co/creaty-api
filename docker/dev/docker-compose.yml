version: '3.9'

services:
  db:
    container_name: dev-db
    extends:
      file: ../docker-compose.base.yml
      service: db
    build:
      context: ../../db
    env_file: [../../envs/.dev.env]
    ports: [5434:5432]
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ../../db/postgresql.conf:/var/lib/postgresql/data/postgresql.conf

  redis-cache:
    container_name: dev-redis-cache
    extends:
      file: ../docker-compose.base.yml
      service: redis-cache
    env_file: [../../envs/.dev.env]

  redis-cacheops:
    container_name: dev-redis-cacheops
    extends:
      file: ../docker-compose.base.yml
      service: redis-cacheops
    env_file: [../../envs/.dev.env]

  redis-storage:
    container_name: dev-redis-storage
    extends:
      file: ../docker-compose.base.yml
      service: redis-storage
    env_file: [../../envs/.dev.env]
    volumes:
      - redis-storage_volume:/data

  redis-celery:
    container_name: dev-redis-celery
    extends:
      file: ../docker-compose.base.yml
      service: redis-celery
    env_file: [../../envs/.dev.env]
    volumes:
      - redis-celery_volume:/data

  api:
    container_name: dev-api
    extends:
      file: ../docker-compose.base.yml
      service: api
    image: ${API_IMAGE}
    env_file: [../../envs/.dev.env]
    volumes:
      - static_volume:/api/static
    networks: [api_network, cal-api_network, proxy_api_network]
    depends_on: [db, redis-cache, redis-cacheops, redis-storage]

  celery:
    container_name: dev-celery
    extends:
      file: ../docker-compose.base.yml
      service: celery
    image: ${API_IMAGE}
    env_file: [../../envs/.dev.env]
    depends_on: [api, redis-celery]

  cbeat:
    container_name: dev-cbeat
    extends:
      file: ../docker-compose.base.yml
      service: cbeat
    image: ${API_IMAGE}
    env_file: [../../envs/.dev.env]
    depends_on: [celery]

  nginx:
    container_name: dev-nginx
    extends:
      file: ../docker-compose.base.yml
      service: nginx
    build:
      dockerfile: ../nginx/dev.dockerfile
    env_file: [../../envs/.dev.env]
    volumes:
      - static_volume:/etc/nginx/html/api/static
    networks: [cal-web_network, proxy_network]
    depends_on: [api]

  cal-db:
    container_name: dev-cal-db
    extends:
      file: ../docker-compose.base.yml
      service: cal-db

  cal-web:
    container_name: dev-cal-web
    extends:
      file: ../docker-compose.base.yml
      service: cal-web
    env_file: [../../envs/.dev.env]
    environment:
      DATABASE_URL: postgresql://pg:password@cal-db:5432/db
    depends_on: [cal-db]

  cal-api:
    container_name: dev-cal-api
    extends:
      file: ../docker-compose.base.yml
      service: cal-api
    env_file: [../../envs/.dev.env]
    environment:
      DATABASE_URL: postgresql://pg:password@cal-db:5432/db
    depends_on: [cal-db]

volumes:
  redis-storage_volume:
  redis-celery_volume:
  db_volume:
  static_volume:
  cal-db_volume:

networks:
  db_network:
  redis_network:
  api_network:
  cal-db_network:
  cal-web_network:
  cal-api_network:
  proxy_network:
    name: stage_proxy_network
    external: true
  proxy_api_network:
    name: stage_proxy_api_network
    external: true
