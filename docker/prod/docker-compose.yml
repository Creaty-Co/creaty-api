version: '3.9'

services:
  db:
    extends:
      file: ../docker-compose.base.yml
      service: db
    build:
      context: ../../db
    env_file: [../../envs/.prod.env]
    ports: [5432:5432]
    volumes:
      - /home/www/creaty/db:/var/lib/postgresql/data
      - ../../db/postgresql.conf:/var/lib/postgresql/data/postgresql.conf

  redis-cache:
    extends:
      file: ../docker-compose.base.yml
      service: redis-cache
    env_file: [../../envs/.prod.env]

  redis-cacheops:
    extends:
      file: ../docker-compose.base.yml
      service: redis-cacheops
    env_file: [../../envs/.prod.env]

  redis-storage:
    extends:
      file: ../docker-compose.base.yml
      service: redis-storage
    env_file: [../../envs/.prod.env]
    volumes:
      - redis-storage_volume:/data

  redis-celery:
    extends:
      file: ../docker-compose.base.yml
      service: redis-celery
    env_file: [../../envs/.prod.env]
    volumes:
      - redis-celery_volume:/data

  api:
    extends:
      file: ../docker-compose.base.yml
      service: api
    image: ${API_IMAGE}:${TAG}
    command: bash -c "
      python manage.py migrate
      && python manage.py collectstatic --noinput
      && (
      python manage.py update_locales --base_url=https://stage-api.creaty.club
      || true
      ) && (daphne -b 0.0.0.0 -p 8001 api.asgi:application &)
      && gunicorn api.wsgi -c gunicorn/config.py
      "
    env_file: [../../envs/.prod.env]
    volumes:
      - static_volume:/api/static
    networks: [api_network]
    depends_on: [db, redis-cache, redis-cacheops, redis-storage]

  celery:
    extends:
      file: ../docker-compose.base.yml
      service: celery
    image: ${API_IMAGE}:${TAG}
    env_file: [../../envs/.prod.env]
    command: bash -c "
      sleep 10
      && celery -A api worker -c 4 -P gevent -l info
      "
    depends_on: [api, redis-celery]

  cbeat:
    extends:
      file: ../docker-compose.base.yml
      service: cbeat
    image: ${API_IMAGE}:${TAG}
    env_file: [../../envs/.prod.env]
    depends_on: [celery]

  nginx:
    extends:
      file: ../docker-compose.base.yml
      service: nginx
    build:
      dockerfile: ../nginx/prod.dockerfile
      args: [TAG]
    env_file: [../../envs/.prod.env]
    ports: [80:80, 443:443]
    volumes:
      - static_volume:/etc/nginx/html/api/static
    depends_on: [api]

volumes:
  redis-storage_volume:
  redis-celery_volume:
  static_volume:

networks:
  db_network:
  redis_network:
  api_network:
